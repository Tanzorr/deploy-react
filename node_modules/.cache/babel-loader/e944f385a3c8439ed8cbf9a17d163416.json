{"ast":null,"code":"import ShopActionTypes from \"./shop.type\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectinsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FALURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectinsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/alexx84/Desktop/react/crwn2/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectinsFailure","errorMessage","FETCH_COLLECTIONS_FALURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAK;AACtCC,EAAAA,IAAI,EAACJ,eAAe,CAACK;AADiB,CAAL,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAG;AACpDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBAD+B;AAEpDC,EAAAA,OAAO,EAACF;AAF4C,CAAH,CAA9C;AAKP,OAAO,MAAMG,sBAAsB,GAAEC,YAAY,KAAG;AAChDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,wBAD2B;AAEhDH,EAAAA,OAAO,EAACE;AAFwC,CAAH,CAA1C;AAKP,OAAO,MAAME,0BAA0B,GAAC,MAAI;AACxC,SAAOC,QAAQ,IAAE;AACb,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAgB;AACrC,YAAMZ,cAAc,GAAGN,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAEP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAHxB;AAIH,GAPD;AAQH,CATM","sourcesContent":["import ShopActionTypes from \"./shop.type\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = ()=>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionsSuccess = collectionsMap=>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload:collectionsMap\n})\n\nexport const fetchCollectinsFailure= errorMessage=>({\n    type:ShopActionTypes.FETCH_COLLECTIONS_FALURE,\n    payload:errorMessage\n})\n\nexport const fetchCollectionsStartAsync=()=>{\n    return dispatch=>{\n        const collectionRef = firestore.collection('collections')\n        dispatch(fetchCollectionsStart())\n        collectionRef.get().then(async snapshot=>{\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            dispatch(fetchCollectionsSuccess(collectionsMap))\n        }).catch(error=>dispatch(fetchCollectinsFailure(error.message)))\n    }\n}"]},"metadata":{},"sourceType":"module"}