{"ast":null,"code":"import firebase, { initializeApp } from \"firebase\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",\n  authDomain: \"crown-db-6333d.firebaseapp.com\",\n  databaseURL: \"https://crown-db-6333d.firebaseio.com\",\n  projectId: \"crown-db-6333d\",\n  storageBucket: \"crown-db-6333d.appspot.com\",\n  messagingSenderId: \"98584581238\",\n  appId: \"1:98584581238:web:83060d9d5bdee97ad03b57\",\n  measurementId: \"G-9WFJ5Z3210\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users'); // console.log(\"Fire store\",userRef)\n\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log(\"collection snapshot\", {\n    colection: collectionSnapshot.docs.map(doc => doc.data())\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    console.log(\"new dOC REF\", newDocRef);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrenUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithCoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/home/alexx84/Desktop/react/crwn2/src/firebase/firebase.utils.js"],"names":["firebase","initializeApp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","console","log","colection","docs","map","data","exists","displayName","email","createAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrenUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithCoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,IAAkBC,aAAlB,QAAsC,UAAtC;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,gCAFF;AAGVC,EAAAA,WAAW,EAAE,uCAHH;AAIVC,EAAAA,SAAS,EAAE,gBAJD;AAKVC,EAAAA,aAAa,EAAE,4BALL;AAMVC,EAAAA,iBAAiB,EAAE,aANT;AAOVC,EAAAA,KAAK,EAAE,0CAPG;AAQVC,EAAAA,aAAa,EAAE;AARL,CAAd;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACvE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqB,OAArB,CAAtB,CAJuE,CAKxE;;AAEE,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB;AACD,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC;AAACC,IAAAA,SAAS,EAACH,kBAAkB,CAACI,IAAnB,CAAwBC,GAAxB,CAA4BX,GAAG,IAAEA,GAAG,CAACY,IAAJ,EAAjC;AAAX,GAAlC;;AAIA,MAAI,CAACR,QAAQ,CAACS,MAAd,EAAqB;AACjB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBnB,QAA1B;AACA,UAAMoB,QAAQ,GAAE,IAAIC,IAAJ,EAAhB;;AAEA,QAAI;AACA,YAAMnB,OAAO,CAACoB,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGnB;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAOsB,KAAP,EAAc;AAEXZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCW,KAAK,CAACC,OAAzC;AACH;AACJ;;AACD,SAAOtB,OAAP;AACH,CA9BM;AAgCP,OAAO,MAAMuB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAqC;AAC1E,QAAMrB,aAAa,GAAGH,SAAS,CAACI,UAAV,CAAqBmB,aAArB,CAAtB;AACA,QAAME,KAAK,GAAGzB,SAAS,CAACyB,KAAV,EAAd;AACAD,EAAAA,YAAY,CAACE,OAAb,CAAsBC,GAAD,IAAO;AACxB,UAAMC,SAAS,GAAGzB,aAAa,CAACF,GAAd,EAAlB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BmB,SAA1B;AACAH,IAAAA,KAAK,CAACN,GAAN,CAAUS,SAAV,EAAoBD,GAApB;AACH,GAJD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACH,CATM;AAWP,OAAQ,MAAMC,+BAA+B,GAAGC,WAAD,IAAe;AAC1D,QAAMC,qBAAqB,GAAGD,WAAW,CAACpB,IAAZ,CAAiBC,GAAjB,CAAqBX,GAAG,IAAE;AACpD,UAAM;AAACgC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAejC,GAAG,CAACY,IAAJ,EAArB;AACA,WAAM;AACFsB,MAAAA,SAAS,EAAEC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADlB;AAEFC,MAAAA,EAAE,EAACrC,GAAG,CAACqC,EAFL;AAGFL,MAAAA,KAHE;AAIFC,MAAAA;AAJE,KAAN;AAMH,GAR6B,CAA9B;AAUF,SAAQF,qBAAqB,CAACO,MAAtB,CAA6B,CAACC,WAAD,EAAcpC,UAAd,KAA2B;AAC3DoC,IAAAA,WAAW,CAACpC,UAAU,CAAC6B,KAAX,CAAiBI,WAAjB,EAAD,CAAX,GAA4CjC,UAA5C;AACA,WAAOoC,WAAP;AACH,GAHM,EAGL,EAHK,CAAR;AAKD,CAhBO;AAkBR,OAAO,MAAMC,aAAa,GAAC,MAAI;AAC3B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC,UAAMC,WAAW,GAAGC,IAAI,CAACC,kBAAL,CAAwBlD,QAAQ,IAAE;AAClDgD,MAAAA,WAAW;AACXF,MAAAA,OAAO,CAAC9C,QAAD,CAAP;AACH,KAHmB,EAGjB+C,MAHiB,CAApB;AAIH,GALM,CAAP;AAMH,CAPM;AASP3D,QAAQ,CAACC,aAAT,CAAuBC,MAAvB;AAEA,OAAO,MAAM2D,IAAI,GAAE7D,QAAQ,CAAC6D,IAAT,EAAZ;AACP,OAAO,MAAM9C,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,OAAO,MAAMgD,cAAc,GAAG,IAAI/D,QAAQ,CAAC6D,IAAT,CAAcG,kBAAlB,EAAvB;AAEPD,cAAc,CAACE,mBAAf,CAAmC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAAnC;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAIN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAA7B;AAGP,eAAe/D,QAAf","sourcesContent":["import firebase, {initializeApp} from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config ={\n    apiKey: \"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",\n    authDomain: \"crown-db-6333d.firebaseapp.com\",\n    databaseURL: \"https://crown-db-6333d.firebaseio.com\",\n    projectId: \"crown-db-6333d\",\n    storageBucket: \"crown-db-6333d.appspot.com\",\n    messagingSenderId: \"98584581238\",\n    appId: \"1:98584581238:web:83060d9d5bdee97ad03b57\",\n    measurementId: \"G-9WFJ5Z3210\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\n    if(!userAuth) return ;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const collectionRef = firestore.collection('users')\n   // console.log(\"Fire store\",userRef)\n\n     const snapShot = await userRef.get()\n    const collectionSnapshot = await collectionRef.get()\n    console.log(\"collection snapshot\",{colection:collectionSnapshot.docs.map(doc=>doc.data())})\n\n\n\n    if (!snapShot.exists){\n        const {displayName,email}=userAuth\n        const createAt =new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            })\n        }catch (error) {\n\n            console.log('error creating user', error.message)\n        }\n    }\n    return userRef\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd)=>{\n    const collectionRef = firestore.collection(collectionKey)\n    const batch = firestore.batch()\n    objectsToAdd.forEach((obj)=>{\n        const newDocRef = collectionRef.doc();\n        console.log(\"new dOC REF\",newDocRef)\n        batch.set(newDocRef,obj)\n    })\n    return await batch.commit()\n}\n\nexport  const convertCollectionsSnapshotToMap =(collections)=>{\n    const transformedCollection = collections.docs.map(doc=>{\n        const {title,items}= doc.data()\n        return{\n            routeName: encodeURI(title.toLowerCase()),\n            id:doc.id,\n            title,\n            items\n        }\n    })\n\n  return  transformedCollection.reduce((accumulator, collection)=>{\n       accumulator[collection.title.toLowerCase()]=collection\n       return accumulator\n   },{})\n\n}\n\nexport const getCurrenUser=()=>{\n    return new Promise((resolve, reject)=>{\n        const unsubscribe = auth.onAuthStateChanged(userAuth=>{\n            unsubscribe()\n            resolve(userAuth)\n        }, reject)\n    })\n}\n\nfirebase.initializeApp(config)\n\nexport const auth =firebase.auth()\nexport const firestore = firebase.firestore()\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\n\ngoogleProvider.setCustomParameters({prompt:'select_account'})\n\nexport const signInWithCoogle = ()=>auth.signInWithPopup(googleProvider)\n\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}