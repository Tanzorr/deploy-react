{"ast":null,"code":"import _regeneratorRuntime from\"/home/alexx84/Desktop/react/crwn2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/alexx84/Desktop/react/crwn2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/alexx84/Desktop/react/crwn2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase,{initializeApp}from\"firebase\";import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",authDomain:\"crown-db-6333d.firebaseapp.com\",databaseURL:\"https://crown-db-6333d.firebaseio.com\",projectId:\"crown-db-6333d\",storageBucket:\"crown-db-6333d.appspot.com\",messagingSenderId:\"98584581238\",appId:\"1:98584581238:web:83060d9d5bdee97ad03b57\",measurementId:\"G-9WFJ5Z3210\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,collectionRef,snapShot,collectionSnapshot,displayName,email,createAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));collectionRef=firestore.collection('users');// console.log(\"Fire store\",userRef)\n_context.next=6;return userRef.get();case 6:snapShot=_context.sent;_context.next=9;return collectionRef.get();case 9:collectionSnapshot=_context.sent;console.log(\"collection snapshot\",{colection:collectionSnapshot.docs.map(function(doc){return doc.data();})});if(snapShot.exists){_context.next=22;break;}displayName=userAuth.displayName,email=userAuth.email;createAt=new Date();_context.prev=14;_context.next=17;return userRef.set(_objectSpread({displayName:displayName,email:email,createAt:createAt},additionalData));case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](14);console.log('error creating user',_context.t0.message);case 22:return _context.abrupt(\"return\",userRef);case 23:case\"end\":return _context.stop();}}},_callee,null,[[14,19]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();console.log(\"new dOC REF\",newDocRef);batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};export var getCurrenUser=function getCurrenUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithCoogle=function signInWithCoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["/home/alexx84/Desktop/react/crwn2/src/firebase/firebase.utils.js"],"names":["firebase","initializeApp","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","get","snapShot","collectionSnapshot","console","log","colection","docs","map","data","exists","displayName","email","createAt","Date","set","message","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrenUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithCoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase, {initializeApp} from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config ={\n    apiKey: \"AIzaSyADn49JKnEtaR2gHKaNdan1hmue9ZX6oa0\",\n    authDomain: \"crown-db-6333d.firebaseapp.com\",\n    databaseURL: \"https://crown-db-6333d.firebaseio.com\",\n    projectId: \"crown-db-6333d\",\n    storageBucket: \"crown-db-6333d.appspot.com\",\n    messagingSenderId: \"98584581238\",\n    appId: \"1:98584581238:web:83060d9d5bdee97ad03b57\",\n    measurementId: \"G-9WFJ5Z3210\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData)=>{\n    if(!userAuth) return ;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const collectionRef = firestore.collection('users')\n   // console.log(\"Fire store\",userRef)\n\n     const snapShot = await userRef.get()\n    const collectionSnapshot = await collectionRef.get()\n    console.log(\"collection snapshot\",{colection:collectionSnapshot.docs.map(doc=>doc.data())})\n\n\n\n    if (!snapShot.exists){\n        const {displayName,email}=userAuth\n        const createAt =new Date()\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            })\n        }catch (error) {\n\n            console.log('error creating user', error.message)\n        }\n    }\n    return userRef\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd)=>{\n    const collectionRef = firestore.collection(collectionKey)\n    const batch = firestore.batch()\n    objectsToAdd.forEach((obj)=>{\n        const newDocRef = collectionRef.doc();\n        console.log(\"new dOC REF\",newDocRef)\n        batch.set(newDocRef,obj)\n    })\n    return await batch.commit()\n}\n\nexport  const convertCollectionsSnapshotToMap =(collections)=>{\n    const transformedCollection = collections.docs.map(doc=>{\n        const {title,items}= doc.data()\n        return{\n            routeName: encodeURI(title.toLowerCase()),\n            id:doc.id,\n            title,\n            items\n        }\n    })\n\n  return  transformedCollection.reduce((accumulator, collection)=>{\n       accumulator[collection.title.toLowerCase()]=collection\n       return accumulator\n   },{})\n\n}\n\nexport const getCurrenUser=()=>{\n    return new Promise((resolve, reject)=>{\n        const unsubscribe = auth.onAuthStateChanged(userAuth=>{\n            unsubscribe()\n            resolve(userAuth)\n        }, reject)\n    })\n}\n\nfirebase.initializeApp(config)\n\nexport const auth =firebase.auth()\nexport const firestore = firebase.firestore()\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\n\ngoogleProvider.setCustomParameters({prompt:'select_account'})\n\nexport const signInWithCoogle = ()=>auth.signInWithPopup(googleProvider)\n\n\nexport default firebase\n"]},"metadata":{},"sourceType":"module"}