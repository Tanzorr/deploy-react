{"ast":null,"code":"import _defineProperty from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from\"../form-imput/form-input.component\";import CustomButton from\"../custom-button/custom-button.component\";import{signUpStart as _signUpStart}from\"../../redux/user/user.actions\";import\"./sign-up.styles.scss\";var SignUpComponent=function SignUpComponent(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displeyName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];var displayName=userData.displayName,email=userData.email,password=userData.password,confirmPassword=userData.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Password don't match\");return _context.abrupt(\"return\");case 4:signUpStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserData(_objectSpread({},userData,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"div\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"I do not have a account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with your eamil and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit,className:\"sign-up\"},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName||\"\",onChange:handleChange,label:\"Display Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUpComponent);","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/components/sign-up/sign-up.component.js"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpComponent","displeyName","email","password","confirmPassword","userData","setUserData","displayName","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {connect} from 'react-redux'\nimport FormInput from \"../form-imput/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {signUpStart} from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\"\n\nconst SignUpComponent=({signUpStart})=> {\n    const[userData, setUserData]= useState({\n        displeyName:'',\n        email:'',\n        password:'',\n        confirmPassword:''\n    })\n\n    const {displayName, email, password,confirmPassword}= userData\n    \n  const  handleSubmit = async event=>{\n        event.preventDefault();\n        if(password!== confirmPassword){\n            alert(\"Password don't match\")\n            return \n        }\n        signUpStart({displayName,email,password})\n    }\n\n   const handleChange = event=>{\n        const {name, value}=event.target\n       setUserData({...userData,[name]:value})\n    }\n    return (\n            <div className='sign-in'>\n                <h2 className='title'>I do not have a account</h2>\n                <span>Sign up with your eamil and password</span>\n                <form onSubmit={handleSubmit} className=\"sign-up\">\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName || \"\"}\n                        onChange={handleChange}\n                        label='Display Name'\n                        required\n                    />\n\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={handleChange}\n                        label='Email'\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={handleChange}\n                        label='Password'\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={handleChange}\n                        label='Confirm password'\n                        required\n                   />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        );\n\n}\n\nconst mapDispatchToProps =dispatch=>({\n    signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent);"]},"metadata":{},"sourceType":"module"}