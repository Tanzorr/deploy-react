{"ast":null,"code":"import{createStore,applyMiddleware}from\"redux\";import logger from'redux-logger';import{persistStore}from'redux-persist';import createSagaMiddleware from'redux-saga';import rootReducer from'./root-reducer';import rootSaga from\"./root-saga\";var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV==='development'){middlewares.push(logger);}export var store=createStore(rootReducer,applyMiddleware.apply(void 0,middlewares));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);export default{store:store,persistor:persistor};","map":{"version":3,"sources":["/home/alexx84/Desktop/react/crwn2/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,YAAR,KAA2B,eAA3B,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAGA,GAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAwB,aAA3B,CAAyC,CACrCH,WAAW,CAACI,IAAZ,CAAiBV,MAAjB,EACH,CAED,MAAO,IAAMW,CAAAA,KAAK,CAAGb,WAAW,CAACK,WAAD,CAAcJ,eAAe,MAAf,QAAmBO,WAAnB,CAAd,CAAzB,CAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB,EAEA,MAAO,IAAMS,CAAAA,SAAS,CAAGZ,YAAY,CAACU,KAAD,CAA9B,CAGP,cAAe,CAACA,KAAK,CAALA,KAAD,CAAQE,SAAS,CAATA,SAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from \"redux\";\nimport logger from 'redux-logger'\nimport {persistStore} from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducer from './root-reducer'\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst middlewares = [sagaMiddleware]\n\nif(process.env.NODE_ENV ==='development'){\n    middlewares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n\n\nexport default {store, persistor}\n"]},"metadata":{},"sourceType":"module"}