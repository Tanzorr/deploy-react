{"ast":null,"code":"import _regeneratorRuntime from\"/home/alexx84/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSingOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{all,call,takeLatest,put}from\"redux-saga/effects\";import UserActionTypes from\"../user/user.types\";import{clearCart}from\"./cart.actions\";export function clearCartOnSingOut(){return _regeneratorRuntime.wrap(function clearCartOnSingOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSingOut);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(onSignOutSuccess)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/alexx84/crwn-clothing/src/redux/cart/cart.sagas.js"],"names":["clearCartOnSingOut","onSignOutSuccess","cartSagas","all","call","takeLatest","put","UserActionTypes","clearCart","SIGN_OUT_SUCCESS"],"mappings":"2LAMiBA,kB,iDAIAC,gB,iDAIAC,S,EAdjB,OAAQC,GAAR,CAAYC,IAAZ,CAAkBC,UAAlB,CAA6BC,GAA7B,KAAuC,oBAAvC,CAEA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,OAAQC,SAAR,KAAwB,gBAAxB,CAGA,MAAO,SAAUR,CAAAA,kBAAV,8IACH,MAAMM,CAAAA,GAAG,CAACE,SAAS,EAAV,CAAT,CADG,sDAIP,MAAO,SAAUP,CAAAA,gBAAV,gJACH,MAAMI,CAAAA,UAAU,CAACE,eAAe,CAACE,gBAAjB,CAAkCT,kBAAlC,CAAhB,CADG,wDAIP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAOC,CAAAA,GAAG,CAAC,CAACC,IAAI,CAACH,gBAAD,CAAL,CAAD,CAAV,CADG","sourcesContent":["import {all,call, takeLatest,put} from \"redux-saga/effects\"\n\nimport UserActionTypes from \"../user/user.types\";\nimport {clearCart} from \"./cart.actions\";\n\n\nexport function* clearCartOnSingOut() {\n    yield put(clearCart())\n}\n\nexport function* onSignOutSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSingOut)\n}\n\nexport function* cartSagas() {\n    yield (all([call(onSignOutSuccess)]))\n}"]},"metadata":{},"sourceType":"module"}