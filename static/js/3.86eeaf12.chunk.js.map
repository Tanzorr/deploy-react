{"version":3,"sources":["redux/shop/shop.selector.js","components/with-spiner/with-spiner.component.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.js","pages/collection/collection.component.js","pages/collection/collection.container.js","components/priview-collection/collections-priview.component.js","components/collections-overview/collection-overview.comopnent.js","pages/collection/collection-overview.container.js","pages/shop/shop.page.component.js"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPerview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","ImageContainer","imageUrl","CollectionFooterContainer","NameContaineer","span","PriceConatainer","connect","dispatch","addItem","item","name","price","style","backgroundImage","inverted","onClick","ownProps","collection","collectionUlParam","match","params","collectionId","title","items","className","id","mapStateToProps","createStructuredSelector","CollectionPageContainer","compose","CollectionPage","ColectionsPriview","toUpperCase","filter","idx","otherCollectionsProps","CollectionOverviewContainer","CollectionsOverview","fetchCollectionsStart","useEffect","exact","path","component"],"mappings":"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","file":"static/js/3.86eeaf12.chunk.js","sourcesContent":["import {createSelector} from \"reselect\";\n\nconst selectShop =state =>state.shop\n\nexport const  selectCollections = createSelector(\n    [selectShop],\n    shop=>shop.collections\n        )\n\nexport const selectCollectionsForPerview = createSelector(\n    [selectCollections],\n    collections=>\n        collections ? Object.keys(collections).map(key=>collections[key]) :[]\n)\n\nexport const selectCollection = (collectionUlParam)=>{\n      //  const iD =COLLECTION_ID_MAP[collectionUlParam]\n        return  createSelector(\n            [selectCollections],\n            collections=>(collections ? collections[collectionUlParam] :null)\n        )\n}\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop=>shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n        [selectShop],\n        shop => !!shop.collections\n)","import React from \"react\";\n\nimport Spinner from \"../spiner/spiner.component\";\n\nconst WithSpinner = WrappedComponent => ({isLoading, ...otherProps}) => {\n    return isLoading ? (\n           <Spinner/>\n        ) : (\n            <WrappedComponent {...otherProps}/>\n        )\n}\n\nexport default WithSpinner\n","import styled from \"styled-components\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\n\nexport const CollectionItemContainer = styled.div`\n    width: 22vw;\n      display: flex;\n      flex-direction: column;\n      height: 350px;\n      align-items: center;\n      min-width: 255px;\n      margin-bottom: 20px;\n      position: relative;\n      margin-right:20px;\n\n     &:hover{\n    .image{\n      opacity: 0.8;\n    }\n\n    button{\n      opacity: 0.85;\n      display: flex;\n    }\n    \n    @media screen and(max-width:800px){\n        width:40vw;\n         &:hover{\n    .image{\n      opacity:unset;\n    }\n\n    button{\n      opacity: unset;\n      \n    }\n    }\n\n  }\n`\n\n\nexport const AddButton= styled(CustomButton)`\n       width: 80%;\n        opacity: 0.7;\n        position: absolute;\n        top:255px;\n        left: 10%;\n        display: none;\n         @media screen and(max-width:800px){\n           display: block;\n            opacity:0.9;\n            min-width:unset;\n            padding:0,10px;\n         }\n`\n\n\n\nexport const ImageContainer = styled.div`\n        width: 100%;\n        height: 95%;\n        background-size: cover;\n        background-position: center;\n        margin-bottom: 5px;\n        background-image:${({imageUrl})=>`url${imageUrl}`}\n`\n\n\nexport const CollectionFooterContainer =styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n\n   \n\n    .price {\n      \n    }\n`\nexport const NameContaineer =styled.span`\n     width: 90%;\n      margin-bottom: 15px;\n`\n\nexport const PriceConatainer = styled.span`\n     width: 10%;\n`\n\n\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {addItem} from \"../../redux/cart/cart.actions\";\nimport {\n    AddButton,\n    CollectionFooterContainer,\n    CollectionItemContainer,\n    ImageContainer,\n    NameContaineer, PriceConatainer\n} from \"./collection-item.styles\";\n\nconst CollectionItem = ({item,addItem})=>{\n    const { name, price, imageUrl}=item\n    return( <CollectionItemContainer>\n                <ImageContainer\n                     style={{\n                         backgroundImage:`url(${imageUrl})`\n                     }}\n                >\n\n                </ImageContainer>\n                <CollectionFooterContainer>\n                    <NameContaineer>{name}</NameContaineer>\n                    <PriceConatainer>{price}</PriceConatainer>\n                </CollectionFooterContainer>\n                <AddButton inverted onClick={()=> addItem(item)} inverted>\n                    Add to cart</AddButton>\n\n            </CollectionItemContainer>)\n}\n\n\n\n\nconst mapDispatchToProps = dispatch=>({\n    addItem:item=>dispatch(addItem(item))\n})\n\nexport  default connect(null,mapDispatchToProps)(CollectionItem)","import React,{useEffect} from \"react\";\nimport {connect} from 'react-redux'\nimport \"./collection.component\"\nimport {selectCollection} from \"../../redux/shop/shop.selector\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport \"./colection.style.scss\"\n\nconst CollectionPage =({collection})=>{\n\n    const {title,items}=collection;\n    return  <div className=\"collection-page\">\n                <h2 className='title'>{title}</h2>\n                <div className=\"items\">\n                    {items.map(\n                        item=><CollectionItem key={item.id} item={item}/>\n                    )}\n                </div>\n            </div>\n\n}\n\n\n\nconst mapStateToProps = (state,ownProps)=>({\n    collection:selectCollection(ownProps.match.params.collectionId)(state)\n})\n\nexport default connect(mapStateToProps)(CollectionPage)\n\n","import {connect} from 'react-redux'\nimport {compose} from \"redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectIsCollectionsLoaded} from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spiner/with-spiner.component\";\nimport CollectionPage from \"./collection.component\";\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: state=>!selectIsCollectionsLoaded(state)\n})\n\nconst CollectionPageContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner,\n)(CollectionPage)\n\n\nexport default CollectionPageContainer\n","import React from \"react\";\nimport \"./colection-priview.style.scss\"\nimport CollectionItem from \"../collection-item/collection-item.component\";\n\n\nconst ColectionsPriview =({title, items})=>(\n    <div className='collection-preview'>\n        <h1 className='title'>{title.toUpperCase()}</h1>\n        <div className='preview' >\n            {items.filter((item,idx)=>idx<4).map((item)=>(\n                <CollectionItem key={item.id} item={item}/>\n            ))\n            }\n        </div>\n    </div>\n)\n\nexport default ColectionsPriview\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from \"reselect\";\nimport './collection-overview.style.scss'\nimport ColectionsPriview from \"../priview-collection/collections-priview.component\";\nimport {selectCollectionsForPerview} from \"../../redux/shop/shop.selector\";\n\n\nconst CollectionsOverview =({collections})=>(\n   <div className=\" collections-overview \">\n       {collections.map(({id,...otherCollectionsProps})=>(\n               <ColectionsPriview key={id}{...otherCollectionsProps}/>\n           ))}\n   </div>\n)\n\n\nconst mapStateToProps = createStructuredSelector({\n    collections:selectCollectionsForPerview\n})\n\n\nexport default connect(mapStateToProps )(CollectionsOverview)","import {connect} from \"react-redux\"\nimport {compose} from \"redux\";\nimport {createStructuredSelector} from \"reselect\";\nimport {selectIsCollectionFetching} from \"../../redux/shop/shop.selector\";\nimport WithSpinner from \"../../components/with-spiner/with-spiner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collection-overview.comopnent\";\n\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n})\n\n\nconst CollectionOverviewContainer =compose(\n    connect(mapStateToProps),\n    WithSpinner,\n)(CollectionsOverview)\n\nexport default CollectionOverviewContainer","import React, {Component, useEffect} from 'react';\nimport {Route} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport {fetchCollectionsStart} from \"../../redux/shop/shop.actions\";\nimport CollectionOverviewContainer from \"../collection/collection-overview.container\";\n\n\nconst ShopPage =({ fetchCollectionsStart,match})=>{\n\n        useEffect(()=>{\n            fetchCollectionsStart();\n        },[fetchCollectionsStart])\n\n    return (\n          <div className='shop-page'>\n              <Route exact\n                     path={`${match.path}`}\n                     component={CollectionOverviewContainer}\n                   />\n                   <Route path={`${match.path}/:collectionId`}\n              component={CollectionPageContainer}/>\n          </div>\n      );\n}\n\n\n\nconst mapDispatchToProps = dispatch=>({\n    fetchCollectionsStart:()=>dispatch(fetchCollectionsStart())\n\n})\n\n\nexport default connect(null,mapDispatchToProps)(ShopPage)\n"],"sourceRoot":""}